import pyshark
import hyperloglog
import sys
import os.path
from datetime import datetime
import time
from time import sleep

#-------------------------------------------------------------------------------

def parsing_parameters():
    l=len(sys.argv)
    f_name_=''
    num_IP=0
    time_=0
    num_ports=0
    for i in range(1, l):
        if(sys.argv[i]=='-p' and i<l):
            f_name_ = sys.argv[i+1]
        elif(sys.argv[i]=='-sIP' and i<l):
            num_IP = sys.argv[i+1]
        elif(sys.argv[i]=='-sP' and i<l):
            num_ports = sys.argv[i+1]
        elif(sys.argv[i]=='-t' and i<l):
            time_ = sys.argv[i+1]
        elif(sys.argv[i]=='--help' and i<=l):
            print('''           Usage:

                    python3 MalwareDetection.py -p <filename> -sIP <num_IP> -sP <num_ports> -t <time>

                    -p
                        name of file.pcap to analyze
                    -sIP
                        different IPs threshold
                    -sP
                        different ports threshold
                    -t
                        interval time of each measurement in seconds
                ''')
            exit()

    if(num_IP == 0):
        num_IP = 20

    if(num_ports == 0):
        num_ports = 50

    return f_name_, int(num_IP), int(num_ports), int(time_)
#-------------------------------------------------------------------------------

def get_info(pkt):

    #Info layer IP
    IP_dst=pkt.ip.dst
    IP_src=pkt.ip.src

    #info layer tcp-udp
    if(hasattr(pkt,'tcp')):
        PORT_src=pkt.tcp.srcport
        PORT_dst=pkt.tcp.dstport
    elif(hasattr(pkt,'udp')):
        PORT_src = pkt.udp.srcport
        PORT_dst=pkt.udp.dstport
    else:
        print('*** nessuno dei due ***')
        PORT_dst = -1

    return IP_dst, IP_src, PORT_dst, PORT_src

#-------------------------------------------------------------------------------

nomeFile, soglia_IP, soglia_Porte, step = parsing_parameters()

#Questo dizionario ci serve per vedere se c'è un certo ip attaccante
diz_IP_attaccanti={}

#Questo dizionario ci serve per vedere se c'è un certo ip vittima di attacco
diz_IP_vittime={}

#Questo dizionario ci serve per vedere se c'è un port scanning verso una certa porta
diz_PORT_attaccanti={}

#Questo dizionario ci serve per vedere se c'è un port scanning su una porta
diz_PORT_vittime={}

#Apro il file pcap per catturare paccehtti
filename = pyshark.FileCapture(nomeFile, keep_packets=False)

#-------------------------------------------------------------------------------

while True:
    #Analizzo un pacchetto alla volta
    try:
        packet=filename.next()

        IP_dst, IP_src, PORT_dst, PORT_src = get_info(packet)

        #Inizializzazione dei dizionari
        diz_IP_attaccanti[IP_src]=hyperloglog.HyperLogLog(0.05)
        diz_IP_vittime[IP_dst]=hyperloglog.HyperLogLog(0.05)

        #Caso in cui il pacchetto non ha protocollo TCP o UDP
        if(PORT_dst==-1):
            continue

        diz_PORT_attaccanti[(IP_src,PORT_src)]=hyperloglog.HyperLogLog(0.05)
        diz_PORT_vittime[(IP_dst,PORT_dst)]=hyperloglog.HyperLogLog(0.05)

    except StopIteration:
        break

#-------------------------------------------------------------------------------

#Apro e chiudo il file per avere il "puntatore" della funzione next di nuovo all'inizio
filename.close()
filename = pyshark.FileCapture(nomeFile, keep_packets=False)

#Ciclo con cui aggiorno i contatori nel dizionario
while True:
    try:
        packet=filename.next()
        IP_dst, IP_src, PORT_dst, PORT_src = get_info(packet)

        #Aggiornamento dei dizionari
        diz_IP_attaccanti.get(IP_src).add(IP_dst)
        diz_IP_vittime.get(IP_dst).add(IP_src)
        diz_PORT_attaccanti.get((IP_src,PORT_src)).add(PORT_dst)
        diz_PORT_vittime.get((IP_dst, PORT_dst)).add(PORT_src)

    except StopIteration:
        break

print('******* REPORT *******')
print('ATTACCANTE | VITTIME')
for key in diz_IP_attaccanti:
    if(len(diz_IP_attaccanti[key])>soglia_IP):
        print(f'Host {key} is probably infect. It is trying to contact {len(diz_IP_attaccanti[key])} different hosts')

print('*'*20)

print('VITTIMA | ATTACCANTE')
for key in diz_IP_vittime:
    if(len(diz_IP_vittime[key])>soglia_IP):
        print(f'Host {key} is probably under attack. {len(diz_IP_vittime[key])} different hosts are trying to contact it')

print('*'*20)

print('ATTACCANTE | VITTIME')
for key in diz_PORT_attaccanti:
    if(len(diz_PORT_attaccanti[key])>soglia_Porte):
        print(f'Host {key[0]} is probably infect. It is trying to contact {len(diz_PORT_attaccanti[key])} different ports')

print('*'*20)

print('VITTIMA | ATTACCANTI')
for key in diz_PORT_vittime:
    if(len(diz_PORT_vittime[key])>soglia_Porte):
        print(f'Host {key[0]} is probably under attack. {len(diz_PORT_attaccanti[key])} different ports are trying to contact it')
